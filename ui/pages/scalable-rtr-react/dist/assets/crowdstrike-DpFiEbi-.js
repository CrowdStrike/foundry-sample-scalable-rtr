var K={};const c=[];for(let i=0;i<256;++i)c.push((i+256).toString(16).slice(1));function q(i,e=0){return(c[i[e+0]]+c[i[e+1]]+c[i[e+2]]+c[i[e+3]]+"-"+c[i[e+4]]+c[i[e+5]]+"-"+c[i[e+6]]+c[i[e+7]]+"-"+c[i[e+8]]+c[i[e+9]]+"-"+c[i[e+10]]+c[i[e+11]]+c[i[e+12]]+c[i[e+13]]+c[i[e+14]]+c[i[e+15]]).toLowerCase()}let O;const $=new Uint8Array(16);function W(){if(!O){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");O=crypto.getRandomValues.bind(crypto)}return O($)}const N=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var j={randomUUID:N};function Q(i,e,t){if(j.randomUUID&&!i)return j.randomUUID();i=i||{};const s=i.random??i.rng?.()??W();if(s.length<16)throw new Error("Random bytes length must be >= 16");return s[6]=s[6]&15|64,s[8]=s[8]&63|128,q(s)}const B="current";function d(i){if(!i.isConnected)throw new Error("You cannot call this API before having established a connection to the host!")}function J(i){return!!i?.data?.meta?.messageId}const Y=5e3,X=3e4,Z=5e3;function ee(i){return i.type==="connect"?Y:i.type==="api"?X:i.type==="navigateTo"?Z:null}class te{onDataUpdate;onBroadcast;onLivereload;pendingMessages=new Map;targetOrigin="*";constructor({onDataUpdate:e,onBroadcast:t,onLivereload:s}={}){this.onDataUpdate=e,this.onBroadcast=t,this.onLivereload=s,window.addEventListener("message",this.handleMessageWrapper)}destroy(){window.removeEventListener("message",this.handleMessageWrapper)}setOrigin(e){this.targetOrigin=e}sendUnidirectionalMessage(e){const t=Q(),s={message:e,meta:{messageId:t,version:B}};window.parent.postMessage(s,this.targetOrigin)}async postMessage(e){return new Promise((t,s)=>{const a=Q();let r;const o=ee(e);o!==null&&(r=setTimeout(()=>{s(new Error(`Waiting for response from foundry host for "${e.type}" message (ID: ${a}) timed out after ${o}ms`))},o)),this.pendingMessages.set(a,p=>{r&&clearTimeout(r),t(p)});const n={message:e,meta:{messageId:a,version:B}};window.parent.postMessage(n,this.targetOrigin)})}handleMessageWrapper=e=>this.handleMessage(e);handleMessage=e=>{if(!J(e))return;const{message:t}=e.data;if(t.type==="data"){this.onDataUpdate?.(t);return}if(t.type==="broadcast"){this.onBroadcast?.(t);return}if(t.type==="livereload"){this.onLivereload?.(t);return}const{messageId:s}=e.data.meta,a=this.pendingMessages.get(s);if(!a){this.throwError("Received unexpected message");return}this.pendingMessages.delete(s),a(t.payload)};throwError(e){throw new Error(e)}}function g(i,e,t,s){var a=arguments.length,r=a<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(i,e,t,s);else for(var n=i.length-1;n>=0;n--)(o=i[n])&&(r=(a<3?o(r):a>3?o(e,t,r):o(e,t))||r);return a>3&&r&&Object.defineProperty(e,t,r),r}const m=new WeakMap,b=new WeakMap,h=new WeakMap,R=Symbol("anyProducer"),U=Promise.resolve(),G=Symbol("listenerAdded"),T=Symbol("listenerRemoved");let P=!1,S=!1;const C=i=>typeof i=="string"||typeof i=="symbol"||typeof i=="number";function V(i){if(!C(i))throw new TypeError("`eventName` must be a string, symbol, or number")}function A(i){if(typeof i!="function")throw new TypeError("listener must be a function")}function w(i,e){const t=b.get(i);if(t.has(e))return t.get(e)}function v(i,e){const t=C(e)?e:R,s=h.get(i);if(s.has(t))return s.get(t)}function se(i,e,t){const s=h.get(i);if(s.has(e))for(const a of s.get(e))a.enqueue(t);if(s.has(R)){const a=Promise.all([e,t]);for(const r of s.get(R))r.enqueue(a)}}function F(i,e){e=Array.isArray(e)?e:[e];let t=!1,s=()=>{},a=[];const r={enqueue(o){a.push(o),s()},finish(){t=!0,s()}};for(const o of e){let n=v(i,o);n||(n=new Set,h.get(i).set(o,n)),n.add(r)}return{async next(){return a?a.length===0?t?(a=void 0,this.next()):(await new Promise(o=>{s=o}),this.next()):{done:!1,value:await a.shift()}:{done:!0}},async return(o){a=void 0;for(const n of e){const p=v(i,n);p&&(p.delete(r),p.size===0&&h.get(i).delete(n))}return s(),arguments.length>0?{done:!0,value:await o}:{done:!0}},[Symbol.asyncIterator](){return this}}}function k(i){if(i===void 0)return _;if(!Array.isArray(i))throw new TypeError("`methodNames` must be an array of strings");for(const e of i)if(!_.includes(e))throw typeof e!="string"?new TypeError("`methodNames` element must be a string"):new Error(`${e} is not Emittery method`);return i}const M=i=>i===G||i===T;function D(i,e,t){if(M(e))try{P=!0,i.emit(e,t)}finally{P=!1}}class E{static mixin(e,t){return t=k(t),s=>{if(typeof s!="function")throw new TypeError("`target` must be function");for(const o of t)if(s.prototype[o]!==void 0)throw new Error(`The property \`${o}\` already exists on \`target\``);function a(){return Object.defineProperty(this,e,{enumerable:!1,value:new E}),this[e]}Object.defineProperty(s.prototype,e,{enumerable:!1,get:a});const r=o=>function(...n){return this[e][o](...n)};for(const o of t)Object.defineProperty(s.prototype,o,{enumerable:!1,value:r(o)});return s}}static get isDebugEnabled(){if(typeof K!="object")return S;const{env:e}=globalThis.process??{env:{}};return e.DEBUG==="emittery"||e.DEBUG==="*"||S}static set isDebugEnabled(e){S=e}constructor(e={}){m.set(this,new Set),b.set(this,new Map),h.set(this,new Map),h.get(this).set(R,new Set),this.debug=e.debug??{},this.debug.enabled===void 0&&(this.debug.enabled=!1),this.debug.logger||(this.debug.logger=(t,s,a,r)=>{try{r=JSON.stringify(r)}catch{r=`Object with the following keys failed to stringify: ${Object.keys(r).join(",")}`}(typeof a=="symbol"||typeof a=="number")&&(a=a.toString());const o=new Date,n=`${o.getHours()}:${o.getMinutes()}:${o.getSeconds()}.${o.getMilliseconds()}`;console.log(`[${n}][emittery:${t}][${s}] Event Name: ${a}
	data: ${r}`)})}logIfDebugEnabled(e,t,s){(E.isDebugEnabled||this.debug.enabled)&&this.debug.logger(e,this.debug.name,t,s)}on(e,t,{signal:s}={}){A(t),e=Array.isArray(e)?e:[e];for(const r of e){V(r);let o=w(this,r);o||(o=new Set,b.get(this).set(r,o)),o.add(t),this.logIfDebugEnabled("subscribe",r,void 0),M(r)||D(this,G,{eventName:r,listener:t})}const a=()=>{this.off(e,t),s?.removeEventListener("abort",a)};return s?.addEventListener("abort",a,{once:!0}),s?.aborted&&a(),a}off(e,t){A(t),e=Array.isArray(e)?e:[e];for(const s of e){V(s);const a=w(this,s);a&&(a.delete(t),a.size===0&&b.get(this).delete(s)),this.logIfDebugEnabled("unsubscribe",s,void 0),M(s)||D(this,T,{eventName:s,listener:t})}}once(e,t){if(t!==void 0&&typeof t!="function")throw new TypeError("predicate must be a function");let s;const a=new Promise(r=>{s=this.on(e,o=>{t&&!t(o)||(s(),r(o))})});return a.off=s,a}events(e){e=Array.isArray(e)?e:[e];for(const t of e)V(t);return F(this,e)}async emit(e,t){if(V(e),M(e)&&!P)throw new TypeError("`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`");this.logIfDebugEnabled("emit",e,t),se(this,e,t);const s=w(this,e)??new Set,a=m.get(this),r=[...s],o=M(e)?[]:[...a];await U,await Promise.all([...r.map(async n=>{if(s.has(n))return n(t)}),...o.map(async n=>{if(a.has(n))return n(e,t)})])}async emitSerial(e,t){if(V(e),M(e)&&!P)throw new TypeError("`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`");this.logIfDebugEnabled("emitSerial",e,t);const s=w(this,e)??new Set,a=m.get(this),r=[...s],o=[...a];await U;for(const n of r)s.has(n)&&await n(t);for(const n of o)a.has(n)&&await n(e,t)}onAny(e,{signal:t}={}){A(e),this.logIfDebugEnabled("subscribeAny",void 0,void 0),m.get(this).add(e),D(this,G,{listener:e});const s=()=>{this.offAny(e),t?.removeEventListener("abort",s)};return t?.addEventListener("abort",s,{once:!0}),t?.aborted&&s(),s}anyEvent(){return F(this)}offAny(e){A(e),this.logIfDebugEnabled("unsubscribeAny",void 0,void 0),D(this,T,{listener:e}),m.get(this).delete(e)}clearListeners(e){e=Array.isArray(e)?e:[e];for(const t of e)if(this.logIfDebugEnabled("clear",t,void 0),C(t)){const s=w(this,t);s&&s.clear();const a=v(this,t);if(a){for(const r of a)r.finish();a.clear()}}else{m.get(this).clear();for(const[s,a]of b.get(this).entries())a.clear(),b.get(this).delete(s);for(const[s,a]of h.get(this).entries()){for(const r of a)r.finish();a.clear(),h.get(this).delete(s)}}}listenerCount(e){e=Array.isArray(e)?e:[e];let t=0;for(const s of e){if(C(s)){t+=m.get(this).size+(w(this,s)?.size??0)+(v(this,s)?.size??0)+(v(this)?.size??0);continue}s!==void 0&&V(s),t+=m.get(this).size;for(const a of b.get(this).values())t+=a.size;for(const a of h.get(this).values())t+=a.size}return t}bindMethods(e,t){if(typeof e!="object"||e===null)throw new TypeError("`target` must be an object");t=k(t);for(const s of t){if(e[s]!==void 0)throw new Error(`The property \`${s}\` already exists on \`target\``);Object.defineProperty(e,s,{enumerable:!1,value:this[s].bind(this)})}}}const _=Object.getOwnPropertyNames(E.prototype).filter(i=>i!=="constructor");Object.defineProperty(E,"listenerAdded",{value:G,writable:!1,enumerable:!0,configurable:!1});Object.defineProperty(E,"listenerRemoved",{value:T,writable:!1,enumerable:!0,configurable:!1});function l(i){let e,t,s;return e=i,(a,r,o)=>{if(o.value!=null)o.value=H(o.value,e,t,s);else if(o.get!=null)o.get=H(o.get,e,t,s);else throw"Only put a Memoize() decorator on a method or get accessor."}}const x=new Map;function H(i,e,t=0,s){const a=Symbol("__memoized_map__");return function(...r){let o;this.hasOwnProperty(a)||Object.defineProperty(this,a,{configurable:!1,enumerable:!1,writable:!1,value:new Map});let n=this[a];if(Array.isArray(s))for(const p of s)x.has(p)?x.get(p).push(n):x.set(p,[n]);if(e||r.length>0||t>0){let p;e===!0?p=r.map(L=>L.toString()).join("!"):e?p=e.apply(this,r):p=r[0];const y=`${p}__timestamp`;let I=!1;if(t>0)if(!n.has(y))I=!0;else{let L=n.get(y);I=Date.now()-L>t}n.has(p)&&!I?o=n.get(p):(o=i.apply(this,r),n.set(p,o),t>0&&n.set(y,Date.now()))}else{const p=this;n.has(p)?o=n.get(p):(o=i.apply(this,r),n.set(p,o))}return o}}class ie{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async deleteEntitiesSuppressedDevicesV1(e={}){const t={type:"api",api:"alerts",method:"deleteEntitiesSuppressedDevicesV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesAlertsV1(e={}){console.warn("This method is deprecated. Use getQueriesAlertsV2 instead.");const t={type:"api",api:"alerts",method:"getQueriesAlertsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesAlertsV2(e={}){const t={type:"api",api:"alerts",method:"getQueriesAlertsV2",payload:{params:e}};return this.bridge.postMessage(t)}async patchCombinedAlertsV2(e,t={}){console.warn("This method is deprecated. Use patchCombinedAlertsV3 instead.");const s={type:"api",api:"alerts",method:"patchCombinedAlertsV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchCombinedAlertsV3(e,t={}){const s={type:"api",api:"alerts",method:"patchCombinedAlertsV3",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchEntitiesAlertsV2(e,t={}){console.warn("This method is deprecated. Use patchEntitiesAlertsV3 instead.");const s={type:"api",api:"alerts",method:"patchEntitiesAlertsV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchEntitiesAlertsV3(e,t={}){const s={type:"api",api:"alerts",method:"patchEntitiesAlertsV3",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchEntitiesSuppressedDevicesV1(e,t={}){const s={type:"api",api:"alerts",method:"patchEntitiesSuppressedDevicesV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesAlertsV1(e,t={}){console.warn("This method is deprecated. Use postAggregatesAlertsV2 instead.");const s={type:"api",api:"alerts",method:"postAggregatesAlertsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesAlertsV2(e,t={}){const s={type:"api",api:"alerts",method:"postAggregatesAlertsV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesAlertsV1(e,t={}){console.warn("This method is deprecated. Use postEntitiesAlertsV2 instead.");const s={type:"api",api:"alerts",method:"postEntitiesAlertsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesAlertsV2(e,t={}){const s={type:"api",api:"alerts",method:"postEntitiesAlertsV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesSuppressedDevicesV1(e,t={}){const s={type:"api",api:"alerts",method:"postEntitiesSuppressedDevicesV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class ae{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async deleteV1CollectionsCollectionNameObjectsObjectKey(e={}){const t={type:"api",api:"customobjects",method:"deleteV1CollectionsCollectionNameObjectsObjectKey",payload:{params:e}};return this.bridge.postMessage(t)}async getV1Collections(e={}){const t={type:"api",api:"customobjects",method:"getV1Collections",payload:{params:e}};return this.bridge.postMessage(t)}async getV1CollectionsCollectionNameObjects(e={}){const t={type:"api",api:"customobjects",method:"getV1CollectionsCollectionNameObjects",payload:{params:e}};return this.bridge.postMessage(t)}async getV1CollectionsCollectionNameObjectsObjectKey(e={}){const t={type:"api",api:"customobjects",method:"getV1CollectionsCollectionNameObjectsObjectKey",payload:{params:e}};return this.bridge.postMessage(t)}async getV1CollectionsCollectionNameObjectsObjectKeyMetadata(e={}){const t={type:"api",api:"customobjects",method:"getV1CollectionsCollectionNameObjectsObjectKeyMetadata",payload:{params:e}};return this.bridge.postMessage(t)}async postV1CollectionsCollectionNameObjects(e,t={}){const s={type:"api",api:"customobjects",method:"postV1CollectionsCollectionNameObjects",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async putV1CollectionsCollectionNameObjectsObjectKey(e,t={}){const s={type:"api",api:"customobjects",method:"putV1CollectionsCollectionNameObjectsObjectKey",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class oe{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getEntitiesSuppressedDevicesV1(e={}){const t={type:"api",api:"detects",method:"getEntitiesSuppressedDevicesV1",payload:{params:e}};return this.bridge.postMessage(t)}async patchEntitiesDetectsV2(e,t={}){const s={type:"api",api:"detects",method:"patchEntitiesDetectsV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchQueriesDetectsV1(e,t={}){const s={type:"api",api:"detects",method:"patchQueriesDetectsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchQueriesDetectsV2(e,t={}){const s={type:"api",api:"detects",method:"patchQueriesDetectsV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesDetectsGetV1(e,t={}){const s={type:"api",api:"detects",method:"postAggregatesDetectsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesSummariesGetV1(e,t={}){const s={type:"api",api:"detects",method:"postEntitiesSummariesGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesSuppressedDevicesV1(e,t={}){const s={type:"api",api:"detects",method:"postEntitiesSuppressedDevicesV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class re{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async deleteEntitiesGroupsV1(e){const t={type:"api",api:"devices",method:"deleteEntitiesGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getAggregatesBucketsV1(e){const t={type:"api",api:"devices",method:"getAggregatesBucketsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getAggregatesFgaTagPrefixCountsV1(e){const t={type:"api",api:"devices",method:"getAggregatesFgaTagPrefixCountsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getAggregatesTagPrefixCountsV1(e){const t={type:"api",api:"devices",method:"getAggregatesTagPrefixCountsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesDevicesV1(e){const t={type:"api",api:"devices",method:"getEntitiesDevicesV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesFgaGroupsV1(e){const t={type:"api",api:"devices",method:"getEntitiesFgaGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesGroupsV1(e){const t={type:"api",api:"devices",method:"getEntitiesGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesAvailableGroupsV1(e={}){const t={type:"api",api:"devices",method:"getQueriesAvailableGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesDevicesHiddenV2(e={}){const t={type:"api",api:"devices",method:"getQueriesDevicesHiddenV2",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesDevicesV1(e={}){const t={type:"api",api:"devices",method:"getQueriesDevicesV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesDevicesV2(e={}){const t={type:"api",api:"devices",method:"getQueriesDevicesV2",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesFgaGroupsV1(e={}){const t={type:"api",api:"devices",method:"getQueriesFgaGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesGroupsV1(e={}){const t={type:"api",api:"devices",method:"getQueriesGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async patchEntitiesDevicesTagsV2(e,t={}){const s={type:"api",api:"devices",method:"patchEntitiesDevicesTagsV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchEntitiesDevicesV1(e,t){const s={type:"api",api:"devices",method:"patchEntitiesDevicesV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchEntitiesGroupsV1(e,t={}){const s={type:"api",api:"devices",method:"patchEntitiesGroupsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesDevicesGetV1(e,t={}){const s={type:"api",api:"devices",method:"postAggregatesDevicesGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesFgaHostsGetV1(e,t={}){const s={type:"api",api:"devices",method:"postAggregatesFgaHostsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postCombinedDevicesLoginHistoryV1(e,t={}){const s={type:"api",api:"devices",method:"postCombinedDevicesLoginHistoryV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postCombinedFgaHostsLoginHistoryV1(e,t={}){const s={type:"api",api:"devices",method:"postCombinedFgaHostsLoginHistoryV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesDevicesActionsV4(e,t={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesActionsV4",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesDevicesHiddenActionsV4(e,t={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesHiddenActionsV4",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesDevicesReportsV1(e,t={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesReportsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesDevicesV1(e,t){const s={type:"api",api:"devices",method:"postEntitiesDevicesV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesDevicesV2(e,t={}){const s={type:"api",api:"devices",method:"postEntitiesDevicesV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesFgaHostsReportsV1(e,t={}){const s={type:"api",api:"devices",method:"postEntitiesFgaHostsReportsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesFgaHostsV1(e,t={}){const s={type:"api",api:"devices",method:"postEntitiesFgaHostsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesGroupActionsV1(e,t){const s={type:"api",api:"devices",method:"postEntitiesGroupActionsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesGroupsV1(e,t={}){const s={type:"api",api:"devices",method:"postEntitiesGroupsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class ne{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getEntitiesExecutionV1(e){const t={type:"api",api:"faasGateway",method:"getEntitiesExecutionV1",payload:{params:e}};return this.bridge.postMessage(t)}async postEntitiesExecutionV1(e,t={}){const s={type:"api",api:"faasGateway",method:"postEntitiesExecutionV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class pe{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async deleteEntitiesNetworkLocationsV1(e){const t={type:"api",api:"fwmgr",method:"deleteEntitiesNetworkLocationsV1",payload:{params:e}};return this.bridge.postMessage(t)}async deleteEntitiesPoliciesV1(e){const t={type:"api",api:"fwmgr",method:"deleteEntitiesPoliciesV1",payload:{params:e}};return this.bridge.postMessage(t)}async deleteEntitiesRuleGroupsV1(e){const t={type:"api",api:"fwmgr",method:"deleteEntitiesRuleGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesEventsV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesEventsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesFirewallFieldsV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesFirewallFieldsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesNetworkLocationsDetailsV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesNetworkLocationsDetailsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesNetworkLocationsV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesNetworkLocationsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesPlatformsV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesPlatformsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesPoliciesV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesPoliciesV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesRuleGroupsV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesRuleGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesRulesV1(e){const t={type:"api",api:"fwmgr",method:"getEntitiesRulesV1",payload:{params:e}};return this.bridge.postMessage(t)}async getLibraryEntitiesRuleGroupsV1(e){const t={type:"api",api:"fwmgr",method:"getLibraryEntitiesRuleGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getLibraryQueriesRuleGroupsV1(e={}){const t={type:"api",api:"fwmgr",method:"getLibraryQueriesRuleGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesEventsV1(e={}){const t={type:"api",api:"fwmgr",method:"getQueriesEventsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesFirewallFieldsV1(e={}){const t={type:"api",api:"fwmgr",method:"getQueriesFirewallFieldsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesNetworkLocationsV1(e={}){const t={type:"api",api:"fwmgr",method:"getQueriesNetworkLocationsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesPlatformsV1(e={}){const t={type:"api",api:"fwmgr",method:"getQueriesPlatformsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesPolicyRulesV1(e={}){const t={type:"api",api:"fwmgr",method:"getQueriesPolicyRulesV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesRuleGroupsV1(e={}){const t={type:"api",api:"fwmgr",method:"getQueriesRuleGroupsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesRulesV1(e={}){const t={type:"api",api:"fwmgr",method:"getQueriesRulesV1",payload:{params:e}};return this.bridge.postMessage(t)}async patchEntitiesNetworkLocationsV1(e,t={}){const s={type:"api",api:"fwmgr",method:"patchEntitiesNetworkLocationsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async patchEntitiesRuleGroupsV1(e,t={}){const s={type:"api",api:"fwmgr",method:"patchEntitiesRuleGroupsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesEventsGetV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postAggregatesEventsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesPolicyRulesGetV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postAggregatesPolicyRulesGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesRuleGroupsGetV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postAggregatesRuleGroupsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesRulesGetV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postAggregatesRulesGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesNetworkLocationsMetadataV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postEntitiesNetworkLocationsMetadataV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesNetworkLocationsPrecedenceV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postEntitiesNetworkLocationsPrecedenceV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesNetworkLocationsV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postEntitiesNetworkLocationsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesOntologyV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postEntitiesOntologyV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesRuleGroupsV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postEntitiesRuleGroupsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesRulesValidateFilepathV1(e,t={}){const s={type:"api",api:"fwmgr",method:"postEntitiesRulesValidateFilepathV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async putEntitiesNetworkLocationsV1(e,t={}){const s={type:"api",api:"fwmgr",method:"putEntitiesNetworkLocationsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async putEntitiesPoliciesV2(e,t={}){const s={type:"api",api:"fwmgr",method:"putEntitiesPoliciesV2",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class de{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getCombinedCrowdscoresV1(e={}){const t={type:"api",api:"incidents",method:"getCombinedCrowdscoresV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesBehaviorsV1(e={}){const t={type:"api",api:"incidents",method:"getQueriesBehaviorsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesIncidentsV1(e={}){const t={type:"api",api:"incidents",method:"getQueriesIncidentsV1",payload:{params:e}};return this.bridge.postMessage(t)}async postAggregatesBehaviorsGetV1(e,t={}){const s={type:"api",api:"incidents",method:"postAggregatesBehaviorsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postAggregatesIncidentsGetV1(e,t={}){const s={type:"api",api:"incidents",method:"postAggregatesIncidentsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesBehaviorsGetV1(e,t={}){const s={type:"api",api:"incidents",method:"postEntitiesBehaviorsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesIncidentActionsV1(e,t={}){const s={type:"api",api:"incidents",method:"postEntitiesIncidentActionsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesIncidentsGetV1(e,t={}){const s={type:"api",api:"incidents",method:"postEntitiesIncidentsGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class ce{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getEntitiesSavedSearchesExecuteV1(e){const t={type:"api",api:"loggingapi",method:"getEntitiesSavedSearchesExecuteV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesSavedSearchesV1(e){const t={type:"api",api:"loggingapi",method:"getEntitiesSavedSearchesV1",payload:{params:e}};return this.bridge.postMessage(t)}async postEntitiesSavedSearchesExecuteV1(e,t={}){const s={type:"api",api:"loggingapi",method:"postEntitiesSavedSearchesExecuteV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class ge{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getIntelMitreEntitiesMatrixV1(e={}){const t={type:"api",api:"mitre",method:"getIntelMitreEntitiesMatrixV1",payload:{params:e}};return this.bridge.postMessage(t)}}class le{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getEntitiesConfigsV1(e={}){const t={type:"api",api:"plugins",method:"getEntitiesConfigsV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesDefinitionsV1(e){const t={type:"api",api:"plugins",method:"getEntitiesDefinitionsV1",payload:{params:e}};return this.bridge.postMessage(t)}async postEntitiesExecuteDraftV1(e,t={}){const s={type:"api",api:"plugins",method:"postEntitiesExecuteDraftV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesExecuteV1(e,t={}){const s={type:"api",api:"plugins",method:"postEntitiesExecuteV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class ue{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async deleteEntitiesPutFilesV1(e){const t={type:"api",api:"remoteResponse",method:"deleteEntitiesPutFilesV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesAppCommandV1(e){const t={type:"api",api:"remoteResponse",method:"getEntitiesAppCommandV1",payload:{params:e}};return this.bridge.postMessage(t)}async getEntitiesPutFilesV2(e){const t={type:"api",api:"remoteResponse",method:"getEntitiesPutFilesV2",payload:{params:e}};return this.bridge.postMessage(t)}async getQueriesPutFilesV1(e={}){const t={type:"api",api:"remoteResponse",method:"getQueriesPutFilesV1",payload:{params:e}};return this.bridge.postMessage(t)}async postEntitiesAppCommandV1(e,t={}){const s={type:"api",api:"remoteResponse",method:"postEntitiesAppCommandV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesAppSessionsV1(e,t={}){const s={type:"api",api:"remoteResponse",method:"postEntitiesAppSessionsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class ye{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getQueriesUsersV1(e={}){const t={type:"api",api:"userManagement",method:"getQueriesUsersV1",payload:{params:e}};return this.bridge.postMessage(t)}async postEntitiesUsersGetV1(e,t={}){const s={type:"api",api:"userManagement",method:"postEntitiesUsersGetV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class he{bridge;constructor(e){this.bridge=e}getBridge(){return this.bridge}async getEntitiesExecutionResultsV1(e){const t={type:"api",api:"workflows",method:"getEntitiesExecutionResultsV1",payload:{params:e}};return this.bridge.postMessage(t)}async postEntitiesExecuteV1(e,t={}){const s={type:"api",api:"workflows",method:"postEntitiesExecuteV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}async postEntitiesExecutionActionsV1(e,t){const s={type:"api",api:"workflows",method:"postEntitiesExecutionActionsV1",payload:{body:e,params:t}};return this.bridge.postMessage(s)}}class u{api;constructor(e){this.api=e}get alerts(){return d(this.api),new ie(this.api.bridge)}get detects(){return d(this.api),new oe(this.api.bridge)}get devices(){return d(this.api),new re(this.api.bridge)}get fwmgr(){return d(this.api),new pe(this.api.bridge)}get incidents(){return d(this.api),new de(this.api.bridge)}get mitre(){return d(this.api),new ge(this.api.bridge)}get plugins(){return d(this.api),new le(this.api.bridge)}get remoteResponse(){return d(this.api),new ue(this.api.bridge)}get userManagement(){return d(this.api),new ye(this.api.bridge)}get workflows(){return d(this.api),new he(this.api.bridge)}get customobjects(){return d(this.api),new ae(this.api.bridge)}get faasGateway(){return d(this.api),new ne(this.api.bridge)}get loggingapi(){return d(this.api),new ce(this.api.bridge)}}g([l()],u.prototype,"alerts",null);g([l()],u.prototype,"detects",null);g([l()],u.prototype,"devices",null);g([l()],u.prototype,"fwmgr",null);g([l()],u.prototype,"incidents",null);g([l()],u.prototype,"mitre",null);g([l()],u.prototype,"plugins",null);g([l()],u.prototype,"remoteResponse",null);g([l()],u.prototype,"userManagement",null);g([l()],u.prototype,"workflows",null);g([l()],u.prototype,"customobjects",null);g([l()],u.prototype,"faasGateway",null);g([l()],u.prototype,"loggingapi",null);class me{falcon;definition;constructor(e,t){this.falcon=e,this.definition=t}async execute({request:e}={}){return this.falcon.api.plugins.postEntitiesExecuteV1({resources:[{definition_id:this.definition.definitionId,operation_id:this.definition.operationId,request:e}]})}}class f{falcon;definition;static GET="GET";static POST="POST";static PATCH="PATCH";static PUT="PUT";static DELETE="DELETE";pollTimeout=500;intervalId;constructor(e,t){this.falcon=e,this.definition=t}async execute({path:e,method:t,body:s,params:a}){const r="id"in this.definition?{function_id:this.definition.id,function_version:this.definition.version}:{function_name:this.definition.name,function_version:this.definition.version},o=await this.falcon.api.faasGateway.postEntitiesExecutionV1({...r,payload:{path:e,method:t,body:s,params:a}});return new Promise((n,p)=>{const y=o?.resources?.[0];y?.execution_id?this.pollForResult({resolve:n,reject:p,executionId:y?.execution_id}):p(o?.errors)})}async getExecutionResult(e){return(await this.falcon.api.faasGateway.getEntitiesExecutionV1({id:e}))?.resources?.[0]?.payload}pollForResult({resolve:e,reject:t,executionId:s}){let a=2;this.intervalId=window.setInterval(async()=>{try{const r=await this.getExecutionResult(s);r&&(window.clearInterval(this.intervalId),e(r))}catch(r){a<=0&&(window.clearInterval(this.intervalId),t(r)),a--}},this.pollTimeout)}path(e){const t=new URL(e,"http://localhost"),s=t.pathname,a=[...t.searchParams.entries()].reduce((r,[o,n])=>({...r,[o]:[n]}),{});return{path:s,queryParams:a,get:async(r={})=>this.get({path:s,params:{query:r?.query??a??{},header:r?.header??{}}}),post:async(r,o={})=>this.post({path:s,params:{query:o?.query??a??{},header:o?.header??{}},body:r}),patch:async(r,o={})=>this.patch({path:s,params:{query:o?.query??a??{},header:o?.header??{}},body:r}),put:async(r,o={})=>this.put({path:s,params:{query:o?.query??a??{},header:o?.header??{}},body:r}),delete:async(r,o={})=>this.delete({path:s,params:{query:o?.query??a??{},header:o?.header??{}},body:r})}}async get({path:e,params:t}){return this.execute({path:e,method:f.GET,params:t})}async post({path:e,params:t,body:s}){return this.execute({path:e,method:f.POST,body:s,params:t})}async patch({path:e,params:t,body:s}){return this.execute({path:e,method:f.PATCH,body:s,params:t})}async put({path:e,params:t,body:s}){return this.execute({path:e,method:f.PUT,body:s,params:t})}async delete({path:e,params:t,body:s}){return this.execute({path:e,method:f.DELETE,body:s,params:t})}destroy(){this.intervalId&&(window.clearInterval(this.intervalId),this.intervalId=void 0)}}class be{falcon;definition;constructor(e,t){this.falcon=e,this.definition=t}async write(e,t){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"write",key:e,collection:this.definition.collection,data:t}})}async read(e){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"read",key:e,collection:this.definition.collection}})}async delete(e){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"delete",key:e,collection:this.definition.collection}})}async search({filter:e,offset:t,sort:s,limit:a}){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"search",filter:e,limit:a,offset:t,sort:s,collection:this.definition.collection}})}async list(e){return this.falcon.bridge.postMessage({type:"collection",payload:{type:"list",collection:this.definition.collection,start:e?.start,end:e?.end,limit:e?.limit}})}}class fe{falcon;constructor(e){this.falcon=e}async write(e,t){return this.falcon.bridge.postMessage({type:"loggingapi",payload:{type:"ingest",data:e,tag:t?.tag,tagSource:t?.tagSource,testData:t?.testData}})}async query(e){return this.falcon.bridge.postMessage({type:"loggingapi",payload:{type:"dynamic-execute",data:e}})}async savedQuery(e){return this.falcon.bridge.postMessage({type:"loggingapi",payload:{type:"saved-query-execute",data:e}})}}const Ee=["_self","_blank"];class Ve{falcon;constructor(e){this.falcon=e}async navigateTo({path:e,type:t,target:s,metaKey:a,ctrlKey:r,shiftKey:o}){await this.falcon.bridge.postMessage({type:"navigateTo",payload:{path:e,type:t??"falcon",target:s??"_self",metaKey:a??!1,ctrlKey:r??!1,shiftKey:o??!1}})}async onClick(e,t="_self",s="falcon"){if(!(e instanceof Event))throw Error('"event" property should be subclass of Event');if(!("preventDefault"in e)||!(e.target instanceof HTMLAnchorElement))return;e.preventDefault();const a=e.target.getAttribute("href");t=e.target.getAttribute("target")??t;const r=e.target.dataset?.type??s;if(t===null||!Ee.includes(t))throw new Error("Target should be _self or _blank");const o=t;if(a==null)throw new Error("Navigation path is missing. Make sure you have added navigation.onClick on the `a` tag and `href` is present.");const{metaKey:n,ctrlKey:p,shiftKey:y}=e;await this.navigateTo({path:a,type:r,target:o,metaKey:n,ctrlKey:p,shiftKey:y})}}class we{bridge;observer;constructor(e){this.bridge=e,this.observer=new ResizeObserver(t=>this.handleResizeEvent(t)),this.observer.observe(document.body)}handleResizeEvent(e){const{height:t}=e[0].contentRect;this.bridge.sendUnidirectionalMessage({type:"resize",payload:{height:t}})}destroy(){this.observer.disconnect()}}class Me{bridge;constructor(e){this.bridge=e}async openModal(e,t,s={}){const a=await this.bridge.postMessage({type:"openModal",payload:{extension:e,title:t,options:s}});if(a instanceof Error)throw a;return a}closeModal(e){this.bridge.sendUnidirectionalMessage({type:"closeModal",payload:e})}async uploadFile(e,t){return this.bridge.postMessage({type:"fileUpload",fileUploadType:e,payload:t})}}class z{isConnected=!1;events=new E;data;bridge=new te({onDataUpdate:e=>this.handleDataUpdate(e),onBroadcast:e=>this.handleBroadcastMessage(e),onLivereload:()=>this.handleLivereloadMessage()});api=new u(this);ui=new Me(this.bridge);resizeTracker;cloudFunctions=[];apiIntegrations=[];collections=[];async connect(){const e=await this.bridge.postMessage({type:"connect"});if(e!==void 0){const{data:t,origin:s}=e;this.bridge.setOrigin(s),this.data=t,this.updateTheme(t?.theme),this.isConnected=!0}return this.resizeTracker=new we(this.bridge),e}get appId(){return this.data?.app.id}sendBroadcast(e){this.bridge.sendUnidirectionalMessage({type:"broadcast",payload:e})}handleDataUpdate(e){this.data=e.payload,this.updateTheme(this.data.theme),this.events.emit("data",this.data)}handleBroadcastMessage(e){this.events.emit("broadcast",e.payload)}handleLivereloadMessage(){document.location.reload()}updateTheme(e){if(!e)return;const t=e==="theme-dark"?"theme-light":"theme-dark";document.documentElement.classList.add(e),document.documentElement.classList.remove(t)}cloudFunction(e){d(this);const t=new f(this,e);return this.cloudFunctions.push(t),t}apiIntegration({definitionId:e,operationId:t}){if(d(this),!this.data)throw Error("Data from console is missing");const s=new me(this,{operationId:t,definitionId:e});return this.apiIntegrations.push(s),s}collection({collection:e}){d(this);const t=new be(this,{collection:e});return this.collections.push(t),t}get navigation(){return d(this),new Ve(this)}get logscale(){return d(this),new fe(this)}destroy(){this.cloudFunctions.forEach(e=>e.destroy()),this.resizeTracker?.destroy(),this.bridge.destroy()}}g([l()],z.prototype,"navigation",null);g([l()],z.prototype,"logscale",null);export{te as B,z as F};
